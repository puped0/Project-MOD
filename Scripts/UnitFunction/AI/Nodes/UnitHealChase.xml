<?xml version="1.0" encoding="utf-8"?>
<CodeBlockFile xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" Id="b3ccecda-f384-4b4e-9824-40fa37edfa49" Language="Lua" Name="UnitHealChase" Type="BTNodeType" Source="None" ModifyTime="2022-02-08T23:41:03.0194064+09:00">
  <CoreVersion Major="0" Minor="2" />
  <ScriptVersion Major="1" Minor="0" />
  <Description />
  <Properties>
    <CodeBlockProperty Name="PrevChaseTime" Type="number" DefaultValue="0" SyncDirection="None" />
    <CodeBlockProperty Name="ChaseRange" Type="Vector2" DefaultValue="Vector2(2,1)" SyncDirection="None" />
  </Properties>
  <Methods>
    <CodeBlockMethod Name="OnBehave" ExecSpace="All">
      <Return Type="any" SyncDirection="None" />
      <Arguments>
        <CodeBlockProperty Name="delta" Type="number" SyncDirection="None" />
      </Arguments>
      <Code><![CDATA[
-- 회복이 필요한 Unit 또는 플레이어 추적

if self.ParentAI.time >= self.ParentAI.tick then
	local UnitEntity = self.ParentAI.Entity
	local UnitAIComp = UnitEntity.UnitAIComponent
	local UnitPosition = Vector2(UnitEntity.TransformComponent.Position.x, UnitEntity.TransformComponent.Position.y)
	
	local CurrentChaseTime = _UtilLogic.ElapsedSeconds

	if CurrentChaseTime > self.PrevChaseTime + 2 then
		self.PrevChaseTime = CurrentChaseTime
		if not isvalid(UnitAIComp.TargetEntity) then
			local UnitSize = UnitEntity.HitComponent.BoxSize
			local ChaseRange = UnitSize + self.ChaseRange*2
			
			local HitComponents = _CollisionService:GetMapServiceFor(UnitEntity):OverlapBox("HitBox", UnitPosition, ChaseRange)
			
			if HitComponents.Count <= 1 then
				return BehaviourTreeStatus.Failure
			end
			
			for i, value in pairs(HitComponents) do
				local TagComponent = value.Entity.TagComponent
				if value.Entity.TagComponent ~= nil and value.Entity ~= UnitEntity and value.Entity.StateComponent.CurrentStateName ~= "DEAD" then
					local MaxHp = 0
					local Hp = 0
					
					if TagComponent.Tags:Contains("unit") then
						local Unit = value.Entity.Unit
						MaxHp = Unit.UnitInfo["MaxHp"]
						Hp = Unit.Hp
					elseif TagComponent.Tags:Contains("player") then
						local Player = value.Entity.PlayerComponent
						MaxHp = Player.MaxHp
						Hp = Player.Hp
					end
					
					if Hp < MaxHp then
						UnitAIComp.TargetEntity = value.Entity
						return BehaviourTreeStatus.Success
					end
				end
			end
		else
			self.ParentAI.time = 0
			
			local UnitSize = UnitEntity.HitComponent.BoxSize
			local TargetEntity = UnitAIComp.TargetEntity
			local TargetPosition = TargetEntity.TransformComponent.Position
			
			local MaxHp = 0
			local Hp = 0
			local Tags = TargetEntity.TagComponent.Tags
			if Tags:Contains("unit") then
				local Unit = TargetEntity.Unit
				MaxHp = Unit.UnitInfo["MaxHp"]
				Hp = Unit.Hp
			elseif Tags:Contains("player") then
				local Player = TargetEntity.PlayerComponent
				MaxHp = Player.MaxHp
				Hp = Player.Hp
			end
			
			if TargetPosition.x < (UnitPosition.x - UnitSize.x/2 - self.ChaseRange.x) or TargetPosition.x > (UnitPosition.x + UnitSize.x/2 + self.ChaseRange.x)
				or Hp >= MaxHp then
				UnitAIComp.TargetEntity = nil
			else
				local TargetEntity = UnitAIComp.TargetEntity
				local TargetPosition = Vector2(TargetEntity.TransformComponent.Position.x, TargetEntity.TransformComponent.Position.y)
				
				UnitAIComp.Destination = TargetPosition
				
				self.ParentAI.Range = 0.5
				return BehaviourTreeStatus.Success
			end
		end
	end
end

return BehaviourTreeStatus.Failure

--[[
참고용 옛날코드 ... 성능 많이먹음
local UnitEntity = self.ParentAI.Entity
local CurrentChaseTime = _UtilLogic.ElapsedSeconds

if self.ParentAI.time >= self.ParentAI.tick and CurrentChaseTime > self.PrevChaseTime + 5 then
	local UnitSize = UnitEntity.HitComponent.BoxSize
	local UnitPosition = Vector2(UnitEntity.TransformComponent.Position.x, UnitEntity.TransformComponent.Position.y)
	local ChaseRange = UnitSize + Vector2(3, 1)
	
	local HitComponents = _CollisionService:GetMapServiceFor(UnitEntity):OverlapBox("HitBox", UnitPosition, ChaseRange)
	
	local TargetEntity = nil
	
	if HitComponents.Count <= 1 then
		return BehaviourTreeStatus.Failure
	end
	
	for i, value in pairs(HitComponents) do
		local TagComponent = value.Entity.TagComponent
		if TagComponent ~= nil and value.Entity.StateComponent.CurrentStateName ~= "DEAD" then
			local MaxHp = 0
			local Hp = 0
			if TagComponent.Tags:Contains("unit") then
				local Unit = value.Entity.Unit
				MaxHp = Unit.UnitInfo["MaxHp"]
				Hp = Unit.Hp
			elseif TagComponent.Tags:Contains("player") then
				local player = value.Entity.PlayerComponent
				MaxHp = player.MaxHp
				Hp = player.Hp
			end
			
			if Hp < MaxHp and value.Entity ~= UnitEntity  then
				TargetEntity = value.Entity
				log("Target On")
				break
			end
		end
	end
	
	if TargetEntity ~= nil then
		self.ParentAI.time = 0
		self.PrevChaseTime = CurrentChaseTime
		 
		local TargetPosition = Vector2(TargetEntity.TransformComponent.Position.x, TargetEntity.TransformComponent.Position.y)
		local TargetBoxSize = TargetEntity.HitComponent.BoxSize
		local UnitAttackRange = UnitEntity.Unit.UnitInfo["AttackRange"]
		UnitEntity.StateComponent:ChangeState("MOVE")
		
		if UnitPosition.x > TargetPosition.x then
			self.ParentAI.Destination.x = TargetPosition.x + (TargetBoxSize.x + UnitAttackRange.x/2)/2
		else
			self.ParentAI.Destination.x = TargetPosition.x - (TargetBoxSize.x + UnitAttackRange.x/2)/2
		end
		
		self.ParentAI.Range = 0.5
		
		return BehaviourTreeStatus.Success
	else
		return BehaviourTreeStatus.Failure
	end
end

return BehaviourTreeStatus.Failure
]]
]]></Code>
    </CodeBlockMethod>
  </Methods>
  <EntityEventHandlers />
</CodeBlockFile>