<?xml version="1.0" encoding="utf-8"?>
<CodeBlockFile xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" Id="2b756ef4-a42f-43a0-a027-ad6c1025cb7c" Language="Lua" Name="CharacterUpgrade" Type="Component" Source="None" ModifyTime="2022-02-08T00:12:50.5898063+09:00">
  <CoreVersion Major="0" Minor="2" />
  <ScriptVersion Major="1" Minor="0" />
  <Description />
  <Properties />
  <Methods>
    <CodeBlockMethod Name="description" ExecSpace="All">
      <Return Type="void" SyncDirection="None" />
      <Code><![CDATA[
-- /ui/CharacterUpgradeUI/CharacterUpgradeInfo/UpgradeList 경로의 UI에서 사용하는 Component
-- Basement 건물 동작
-- 캐릭터 업그레이드에 관련된 UI 동작을 수행하는 코드
-- UI 동작 후엔 Server에서 캐릭터 업그레이드 수행(관련 데이터 수정)
-- Basement 건물 동작이지만 버그 때문에 자꾸 Barrack 폴더로 옮겨짐
]]></Code>
    </CodeBlockMethod>
    <CodeBlockMethod Name="OnBeginPlay" ExecSpace="ClientOnly">
      <Return Type="void" SyncDirection="None" />
      <Code><![CDATA[
-- UI 초기 설정
-- 유저마다 DB에 저장된 캐릭터 성능이 다름

local UpgradeList = self.Entity
local UpgradeButtons = {}

UpgradeButtons["Attack"] = UpgradeList:GetChildByName("Attack")
UpgradeButtons["Defence"] = UpgradeList:GetChildByName("Defence")
UpgradeButtons["MaxHp"] = UpgradeList:GetChildByName("MaxHp")
UpgradeButtons["CriticalRate"] = UpgradeList:GetChildByName("CriticalRate")
UpgradeButtons["CriticalDamageRate"] = UpgradeList:GetChildByName("CriticalDamageRate")
UpgradeButtons["AttackSpeed"] = UpgradeList:GetChildByName("AttackSpeed")

UpgradeButtons["Attack"]:ConnectEvent(ButtonClickEvent, self.Attack)
UpgradeButtons["Defence"]:ConnectEvent(ButtonClickEvent, self.Defence)
UpgradeButtons["MaxHp"]:ConnectEvent(ButtonClickEvent, self.MaxHp)
UpgradeButtons["CriticalRate"]:ConnectEvent(ButtonClickEvent, self.CriticalRate)
UpgradeButtons["CriticalDamageRate"]:ConnectEvent(ButtonClickEvent, self.CriticalDamageRate)
UpgradeButtons["AttackSpeed"]:ConnectEvent(ButtonClickEvent, self.AttackSpeed)

local LocalPlayer = _UserService.LocalPlayer

while LocalPlayer.ExtendPlayerComponent.IsDataSet < 18 do
	wait(0.1)
end

--log("CharacterUpgrade Data Done")

local Common = _EntityService:GetEntityByPath("/common")
local CharacterUpgradeInfo = Common.Common.CharacterUpgradeInfo
local ExtendPlayerComp = LocalPlayer.ExtendPlayerComponent

for Name, UpgradeButton in pairs(UpgradeButtons) do
	local Description = UpgradeButton:GetChildByName("Description")
	local Cost = UpgradeButton:GetChildByName("Cost")
	local Level = UpgradeButton:GetChildByName("Level")
	local Info = CharacterUpgradeInfo[Name]
	
	if Name == "Attack" then
		Description.TextComponent.Text = tostring(ExtendPlayerComp.Attack) .. "  ▶  " .. tostring(ExtendPlayerComp.Attack + Info["Amount"])
	elseif Name == "Defence" then
		Description.TextComponent.Text = tostring(ExtendPlayerComp.Defence) .. "  ▶  " .. tostring(ExtendPlayerComp.Defence + Info["Amount"])
	elseif Name == "MaxHp" then
		Description.TextComponent.Text = tostring(ExtendPlayerComp.MaxHp) .. "  ▶  " .. tostring(ExtendPlayerComp.MaxHp + Info["Amount"])
	elseif Name == "CriticalRate" then
		Description.TextComponent.Text = tostring(ExtendPlayerComp.CriticalRate*100) .. "%  ▶  " .. tostring((ExtendPlayerComp.CriticalRate + Info["Amount"])*100) .. "%"
	elseif Name == "CriticalDamageRate" then
		Description.TextComponent.Text = tostring(ExtendPlayerComp.CriticalDamageRate*100) .. "%  ▶  " .. tostring((ExtendPlayerComp.CriticalDamageRate + Info["Amount"])*100) .. "%"
	elseif Name == "AttackSpeed" then
		Description.TextComponent.Text = tostring(ExtendPlayerComp.AttackSpeed) .. "  ▶  " .. tostring(ExtendPlayerComp.AttackSpeed * (1 + Info["Amount"]))
	end
	
	Cost.TextComponent.Text = tostring(Info["InitCost"])
	Level.TextComponent.Text = "1"
end
]]></Code>
    </CodeBlockMethod>
    <CodeBlockMethod Name="Attack" ExecSpace="ClientOnly">
      <Return Type="void" SyncDirection="None" />
      <Code><![CDATA[
self:StatUpgrade("Attack")
]]></Code>
    </CodeBlockMethod>
    <CodeBlockMethod Name="Defence" ExecSpace="ClientOnly">
      <Return Type="void" SyncDirection="None" />
      <Code><![CDATA[
self:StatUpgrade("Defence")
]]></Code>
    </CodeBlockMethod>
    <CodeBlockMethod Name="MaxHp" ExecSpace="ClientOnly">
      <Return Type="void" SyncDirection="None" />
      <Code><![CDATA[
self:StatUpgrade("MaxHp")
]]></Code>
    </CodeBlockMethod>
    <CodeBlockMethod Name="CriticalRate" ExecSpace="ClientOnly">
      <Return Type="void" SyncDirection="None" />
      <Code><![CDATA[
self:StatUpgrade("CriticalRate")
]]></Code>
    </CodeBlockMethod>
    <CodeBlockMethod Name="CriticalDamageRate" ExecSpace="ClientOnly">
      <Return Type="void" SyncDirection="None" />
      <Code><![CDATA[
self:StatUpgrade("CriticalDamageRate")
]]></Code>
    </CodeBlockMethod>
    <CodeBlockMethod Name="AttackSpeed" ExecSpace="ClientOnly">
      <Return Type="void" SyncDirection="None" />
      <Code><![CDATA[
self:StatUpgrade("AttackSpeed")
]]></Code>
    </CodeBlockMethod>
    <CodeBlockMethod Name="StatUpgrade" ExecSpace="ClientOnly">
      <Return Type="void" SyncDirection="None" />
      <Arguments>
        <CodeBlockProperty Name="StatName" Type="string" DefaultValue="&quot;&quot;" SyncDirection="None" />
      </Arguments>
      <Code><![CDATA[
-- 캐릭터 업그레이드와 관련된 UI 동작
-- UI 수치 갱신
-- 서버의 업그레이드 함수 호출

local Entity = self.Entity
local LocalPlayer = _UserService.LocalPlayer
local CharacterUpgradeInfo = Entity.Parent
local CalledBy = CharacterUpgradeInfo.CharacterUpgradeUIManager.CalledBy

if not isvalid(CalledBy) then
	CharacterUpgradeInfo:SetVisible(false)
	CharacterUpgradeInfo:SetEnable(false)
	return
end

local PlayerPosition = Vector2(LocalPlayer.TransformComponent.Position.x, LocalPlayer.TransformComponent.Position.y)
local BuildingPosition = Vector2(CalledBy.TransformComponent.Position.x, CalledBy.TransformComponent.Position.y)

if Vector2.Distance(PlayerPosition, BuildingPosition) > 3 then
	CharacterUpgradeInfo.CharacterUpgradeUIManager:SetUI(false)
	return
end

local Common = _EntityService:GetEntityByPath("/common")
local Info = Common.Common.CharacterUpgradeInfo[StatName]

local ExtendPlayerComp = LocalPlayer.ExtendPlayerComponent
local StatLevel = ExtendPlayerComp.StatLevel[StatName]

local Cost = Info["InitCost"] + Info["IncreasementCost"] * (StatLevel - 1)
local CharacterMoney = 0

local Role = _UserService.LocalPlayer.InitRole.Role


if Role == "Character" then
	CharacterMoney = LocalPlayer.CharacterInput.CharacterMoney
elseif Role == "Hybrid" then
	CharacterMoney = LocalPlayer.HybridInput.CharacterMoney
end

if CharacterMoney >= Cost then
	local UpgradeButton = Entity:GetChildByName(StatName)
	local DescriptionEntity = UpgradeButton:GetChildByName("Description")
	local CostEntity = UpgradeButton:GetChildByName("Cost")
	local LevelEntity = UpgradeButton:GetChildByName("Level")
		
	if StatName == "Attack" then
		DescriptionEntity.TextComponent.Text = tostring(ExtendPlayerComp.Attack + Info["Amount"]) .. "  ▶  " .. tostring(ExtendPlayerComp.Attack + Info["Amount"]*2)
	elseif StatName == "Defence" then
		DescriptionEntity.TextComponent.Text = tostring(ExtendPlayerComp.Defence + Info["Amount"]) .. "  ▶  " .. tostring(ExtendPlayerComp.Defence + Info["Amount"]*2)
	elseif StatName == "MaxHp" then
		DescriptionEntity.TextComponent.Text = tostring(ExtendPlayerComp.MaxHp + Info["Amount"]) .. "  ▶  " .. tostring(ExtendPlayerComp.MaxHp + Info["Amount"]*2)
	elseif StatName == "CriticalRate" then
		DescriptionEntity.TextComponent.Text = tostring((ExtendPlayerComp.CriticalRate + Info["Amount"]) * 100) .. "%  ▶  " .. tostring((ExtendPlayerComp.CriticalRate + Info["Amount"]*2) * 100) .. "%"
	elseif StatName == "CriticalDamageRate" then
		DescriptionEntity.TextComponent.Text = tostring((ExtendPlayerComp.CriticalDamageRate + Info["Amount"])*100) .. "%  ▶  " .. tostring((ExtendPlayerComp.CriticalDamageRate + Info["Amount"]*2) * 100) .. "%"
	elseif StatName == "AttackSpeed" then
		DescriptionEntity.TextComponent.Text = tostring(ExtendPlayerComp.AttackSpeed * (1 + Info["Amount"])) .. "  ▶  " .. tostring(ExtendPlayerComp.AttackSpeed * (1 + Info["Amount"])*(1 + Info["Amount"]))
	end
	
	CostEntity.TextComponent.Text = tostring(math.floor(Cost + Info["IncreasementCost"]))
	LevelEntity.TextComponent.Text = tostring(math.floor(StatLevel + 1))
	
	LocalPlayer.ExtendPlayerComponent:StatUpgrade(StatName, Info["Amount"], Cost)
else
	--log("돈이 부족함")
end
]]></Code>
    </CodeBlockMethod>
  </Methods>
  <EntityEventHandlers />
</CodeBlockFile>